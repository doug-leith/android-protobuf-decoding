# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: frameworks/proto_logging/stats/message/mediametrics_message.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\nAframeworks/proto_logging/stats/message/mediametrics_message.proto\x12\"android.stats.mediametrics_message\"\xe1\x01\n\x0f\x41udioPolicyData\x12\x0e\n\x06status\x18\x01 \x01(\x05\x12\x16\n\x0erequest_source\x18\x02 \x01(\t\x12\x17\n\x0frequest_package\x18\x03 \x01(\t\x12\x17\n\x0frequest_session\x18\x04 \x01(\x05\x12\x16\n\x0erequest_device\x18\x05 \x01(\t\x12\x15\n\ractive_source\x18\x06 \x01(\t\x12\x16\n\x0e\x61\x63tive_package\x18\x07 \x01(\t\x12\x16\n\x0e\x61\x63tive_session\x18\x08 \x01(\x05\x12\x15\n\ractive_device\x18\t \x01(\t\"\xbb\x02\n\x0f\x41udioRecordData\x12\x10\n\x08\x65ncoding\x18\x01 \x01(\t\x12\x0e\n\x06source\x18\x02 \x01(\t\x12\x0f\n\x07latency\x18\x03 \x01(\x05\x12\x12\n\nsamplerate\x18\x04 \x01(\x05\x12\x10\n\x08\x63hannels\x18\x05 \x01(\x05\x12\x16\n\x0e\x63reated_millis\x18\x06 \x01(\x03\x12\x17\n\x0f\x64uration_millis\x18\x07 \x01(\x03\x12\r\n\x05\x63ount\x18\x08 \x01(\x05\x12\x12\n\nerror_code\x18\t \x01(\x05\x12\x16\n\x0e\x65rror_function\x18\n \x01(\t\x12\x0f\n\x07port_id\x18\x0b \x01(\x05\x12\x13\n\x0b\x66rame_count\x18\x0c \x01(\x05\x12\x12\n\nattributes\x18\r \x01(\t\x12\x14\n\x0c\x63hannel_mask\x18\x0e \x01(\x03\x12\x13\n\x0bstart_count\x18\x0f \x01(\x03\"\x9b\x05\n\x0f\x41udioThreadData\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x12\n\nframecount\x18\x02 \x01(\x05\x12\x12\n\nsamplerate\x18\x03 \x01(\x05\x12\x18\n\x10work_millis_hist\x18\x04 \x01(\t\x12\x1b\n\x13latency_millis_hist\x18\x05 \x01(\t\x12\x1a\n\x12warmup_millis_hist\x18\x06 \x01(\t\x12\x11\n\tunderruns\x18\x07 \x01(\x03\x12\x10\n\x08overruns\x18\x08 \x01(\x03\x12\x15\n\ractive_millis\x18\t \x01(\x03\x12\x17\n\x0f\x64uration_millis\x18\n \x01(\x03\x12\n\n\x02id\x18\x0b \x01(\x05\x12\x0f\n\x07port_id\x18\x0c \x01(\x05\x12\x13\n\x0bsample_rate\x18\r \x01(\x05\x12\x14\n\x0c\x63hannel_mask\x18\x0e \x01(\x03\x12\x10\n\x08\x65ncoding\x18\x0f \x01(\t\x12\x13\n\x0b\x66rame_count\x18\x10 \x01(\x05\x12\x15\n\routput_device\x18\x11 \x01(\t\x12\x14\n\x0cinput_device\x18\x12 \x01(\t\x12\x1d\n\x15io_jitter_mean_millis\x18\x13 \x01(\x01\x12\x1f\n\x17io_jitter_stddev_millis\x18\x14 \x01(\x01\x12 \n\x18process_time_mean_millis\x18\x15 \x01(\x01\x12\"\n\x1aprocess_time_stddev_millis\x18\x16 \x01(\x01\x12$\n\x1ctimestamp_jitter_mean_millis\x18\x17 \x01(\x01\x12&\n\x1etimestamp_jitter_stddev_millis\x18\x18 \x01(\x01\x12\x1b\n\x13latency_mean_millis\x18\x19 \x01(\x01\x12\x1d\n\x15latency_stddev_millis\x18\x1a \x01(\x01\"\xf8\x01\n\x0e\x41udioTrackData\x12\x13\n\x0bstream_type\x18\x01 \x01(\t\x12\x14\n\x0c\x63ontent_type\x18\x02 \x01(\t\x12\x13\n\x0btrack_usage\x18\x03 \x01(\t\x12\x13\n\x0bsample_rate\x18\x04 \x01(\x05\x12\x14\n\x0c\x63hannel_mask\x18\x05 \x01(\x03\x12\x17\n\x0funderrun_frames\x18\x06 \x01(\x05\x12\x16\n\x0estartup_glitch\x18\x07 \x01(\x05\x12\x0f\n\x07port_id\x18\x08 \x01(\x05\x12\x10\n\x08\x65ncoding\x18\t \x01(\t\x12\x13\n\x0b\x66rame_count\x18\n \x01(\x05\x12\x12\n\nattributes\x18\x0b \x01(\t\"\xcc\t\n\tCodecData\x12\r\n\x05\x63odec\x18\x01 \x01(\t\x12\x0c\n\x04mime\x18\x02 \x01(\t\x12\x0c\n\x04mode\x18\x03 \x01(\t\x12\x0f\n\x07\x65ncoder\x18\x04 \x01(\x05\x12\x0e\n\x06secure\x18\x05 \x01(\x05\x12\r\n\x05width\x18\x06 \x01(\x05\x12\x0e\n\x06height\x18\x07 \x01(\x05\x12\x10\n\x08rotation\x18\x08 \x01(\x05\x12\x0e\n\x06\x63rypto\x18\t \x01(\x05\x12\x0f\n\x07profile\x18\n \x01(\x05\x12\r\n\x05level\x18\x0b \x01(\x05\x12\x11\n\tmax_width\x18\x0c \x01(\x05\x12\x12\n\nmax_height\x18\r \x01(\x05\x12\x12\n\nerror_code\x18\x0e \x01(\x05\x12\x13\n\x0b\x65rror_state\x18\x0f \x01(\t\x12\x13\n\x0blatency_max\x18\x10 \x01(\x03\x12\x13\n\x0blatency_min\x18\x11 \x01(\x03\x12\x13\n\x0blatency_avg\x18\x12 \x01(\x03\x12\x15\n\rlatency_count\x18\x13 \x01(\x03\x12\x17\n\x0flatency_unknown\x18\x14 \x01(\x03\x12 \n\x18queue_input_buffer_error\x18\x15 \x01(\x05\x12\'\n\x1fqueue_secure_input_buffer_error\x18\x16 \x01(\x05\x12\x14\n\x0c\x62itrate_mode\x18\x17 \x01(\t\x12\x0f\n\x07\x62itrate\x18\x18 \x01(\x05\x12\x17\n\x0flifetime_millis\x18\x19 \x01(\x03\x12\x16\n\x0elog_session_id\x18\x1a \x01(\t\x12\x15\n\rchannel_count\x18\x1b \x01(\x05\x12\x13\n\x0bsample_rate\x18\x1c \x01(\x05\x12\x1a\n\x12video_encode_bytes\x18\x1d \x01(\x03\x12\x1b\n\x13video_encode_frames\x18\x1e \x01(\x03\x12\x19\n\x11video_input_bytes\x18\x1f \x01(\x03\x12\x1a\n\x12video_input_frames\x18  \x01(\x03\x12 \n\x18video_encode_duration_us\x18! \x01(\x03\x12\x14\n\x0c\x63olor_format\x18\" \x01(\x05\x12\x12\n\nframe_rate\x18# \x01(\x01\x12\x14\n\x0c\x63\x61pture_rate\x18$ \x01(\x01\x12\x16\n\x0eoperating_rate\x18% \x01(\x01\x12\x10\n\x08priority\x18& \x01(\x05\x12\x16\n\x0evideo_qp_i_min\x18\' \x01(\x05\x12\x16\n\x0evideo_qp_i_max\x18( \x01(\x05\x12\x16\n\x0evideo_qp_p_min\x18) \x01(\x05\x12\x16\n\x0evideo_qp_p_max\x18* \x01(\x05\x12\x16\n\x0evideo_qp_b_min\x18+ \x01(\x05\x12\x16\n\x0evideo_qp_b_max\x18, \x01(\x05\x12\x18\n\x10original_bitrate\x18- \x01(\x05\x12\x18\n\x10shaping_enhanced\x18. \x01(\x05\x12\x1f\n\x17original_video_qp_i_min\x18/ \x01(\x05\x12\x1f\n\x17original_video_qp_i_max\x18\x30 \x01(\x05\x12\x1f\n\x17original_video_qp_p_min\x18\x31 \x01(\x05\x12\x1f\n\x17original_video_qp_p_max\x18\x32 \x01(\x05\x12\x1f\n\x17original_video_qp_b_min\x18\x33 \x01(\x05\x12\x1f\n\x17original_video_qp_b_max\x18\x34 \x01(\x05\"\xfe\x01\n\rExtractorData\x12\x0e\n\x06\x66ormat\x18\x01 \x01(\t\x12\x0c\n\x04mime\x18\x02 \x01(\t\x12\x0e\n\x06tracks\x18\x03 \x01(\x05\x12X\n\x0b\x65ntry_point\x18\x04 \x01(\x0e\x32<.android.stats.mediametrics_message.ExtractorData.EntryPoint:\x05UNSET\x12\x16\n\x0elog_session_id\x18\x05 \x01(\t\"M\n\nEntryPoint\x12\t\n\x05UNSET\x10\x00\x12\x07\n\x03SDK\x10\x01\x12\x10\n\x0cNDK_WITH_JVM\x10\x02\x12\x0e\n\nNDK_NO_JVM\x10\x03\x12\t\n\x05OTHER\x10\x04\"\xbb\x03\n\x0cNuPlayerData\x12\x13\n\x0bwhichPlayer\x18\x01 \x01(\t\x12\x12\n\nvideo_mime\x18\x02 \x01(\t\x12\x13\n\x0bvideo_codec\x18\x03 \x01(\t\x12\r\n\x05width\x18\x04 \x01(\x05\x12\x0e\n\x06height\x18\x05 \x01(\x05\x12\x0e\n\x06\x66rames\x18\x06 \x01(\x03\x12\x16\n\x0e\x66rames_dropped\x18\x07 \x01(\x03\x12\x11\n\tframerate\x18\x08 \x01(\x01\x12\x12\n\naudio_mime\x18\t \x01(\t\x12\x13\n\x0b\x61udio_codec\x18\n \x01(\t\x12\x17\n\x0f\x64uration_millis\x18\x0b \x01(\x03\x12\x16\n\x0eplaying_millis\x18\x0c \x01(\x03\x12\r\n\x05\x65rror\x18\r \x01(\x05\x12\x12\n\nerror_code\x18\x0e \x01(\x05\x12\x13\n\x0b\x65rror_state\x18\x0f \x01(\t\x12\x18\n\x10\x64\x61ta_source_type\x18\x10 \x01(\t\x12\x1a\n\x12rebuffering_millis\x18\x11 \x01(\x03\x12\x11\n\trebuffers\x18\x12 \x01(\x05\x12\x18\n\x10rebuffer_at_exit\x18\x13 \x01(\x05\x12\x1e\n\x16\x66rames_dropped_startup\x18\x14 \x01(\x03\"\xf9\x03\n\x0cRecorderData\x12\x12\n\naudio_mime\x18\x01 \x01(\t\x12\x12\n\nvideo_mime\x18\x02 \x01(\t\x12\x15\n\rvideo_profile\x18\x03 \x01(\x05\x12\x13\n\x0bvideo_level\x18\x04 \x01(\x05\x12\r\n\x05width\x18\x05 \x01(\x05\x12\x0e\n\x06height\x18\x06 \x01(\x05\x12\x10\n\x08rotation\x18\x07 \x01(\x05\x12\x11\n\tframerate\x18\x08 \x01(\x05\x12\x13\n\x0b\x63\x61pture_fps\x18\t \x01(\x05\x12\x1a\n\x12\x63\x61pture_fps_enable\x18\n \x01(\x01\x12\x17\n\x0f\x64uration_millis\x18\x0b \x01(\x03\x12\x15\n\rpaused_millis\x18\x0c \x01(\x03\x12\x14\n\x0cpaused_count\x18\r \x01(\x05\x12\x15\n\raudio_bitrate\x18\x0e \x01(\x05\x12\x16\n\x0e\x61udio_channels\x18\x0f \x01(\x05\x12\x18\n\x10\x61udio_samplerate\x18\x10 \x01(\x05\x12\x17\n\x0fmovie_timescale\x18\x11 \x01(\x05\x12\x17\n\x0f\x61udio_timescale\x18\x12 \x01(\x05\x12\x17\n\x0fvideo_timescale\x18\x13 \x01(\x05\x12\x15\n\rvideo_bitrate\x18\x14 \x01(\x05\x12\x17\n\x0fiframe_interval\x18\x15 \x01(\x05\x12\x16\n\x0elog_session_id\x18\x16 \x01(\t')



_AUDIOPOLICYDATA = DESCRIPTOR.message_types_by_name['AudioPolicyData']
_AUDIORECORDDATA = DESCRIPTOR.message_types_by_name['AudioRecordData']
_AUDIOTHREADDATA = DESCRIPTOR.message_types_by_name['AudioThreadData']
_AUDIOTRACKDATA = DESCRIPTOR.message_types_by_name['AudioTrackData']
_CODECDATA = DESCRIPTOR.message_types_by_name['CodecData']
_EXTRACTORDATA = DESCRIPTOR.message_types_by_name['ExtractorData']
_NUPLAYERDATA = DESCRIPTOR.message_types_by_name['NuPlayerData']
_RECORDERDATA = DESCRIPTOR.message_types_by_name['RecorderData']
_EXTRACTORDATA_ENTRYPOINT = _EXTRACTORDATA.enum_types_by_name['EntryPoint']
AudioPolicyData = _reflection.GeneratedProtocolMessageType('AudioPolicyData', (_message.Message,), {
  'DESCRIPTOR' : _AUDIOPOLICYDATA,
  '__module__' : 'frameworks.proto_logging.stats.message.mediametrics_message_pb2'
  # @@protoc_insertion_point(class_scope:android.stats.mediametrics_message.AudioPolicyData)
  })
_sym_db.RegisterMessage(AudioPolicyData)

AudioRecordData = _reflection.GeneratedProtocolMessageType('AudioRecordData', (_message.Message,), {
  'DESCRIPTOR' : _AUDIORECORDDATA,
  '__module__' : 'frameworks.proto_logging.stats.message.mediametrics_message_pb2'
  # @@protoc_insertion_point(class_scope:android.stats.mediametrics_message.AudioRecordData)
  })
_sym_db.RegisterMessage(AudioRecordData)

AudioThreadData = _reflection.GeneratedProtocolMessageType('AudioThreadData', (_message.Message,), {
  'DESCRIPTOR' : _AUDIOTHREADDATA,
  '__module__' : 'frameworks.proto_logging.stats.message.mediametrics_message_pb2'
  # @@protoc_insertion_point(class_scope:android.stats.mediametrics_message.AudioThreadData)
  })
_sym_db.RegisterMessage(AudioThreadData)

AudioTrackData = _reflection.GeneratedProtocolMessageType('AudioTrackData', (_message.Message,), {
  'DESCRIPTOR' : _AUDIOTRACKDATA,
  '__module__' : 'frameworks.proto_logging.stats.message.mediametrics_message_pb2'
  # @@protoc_insertion_point(class_scope:android.stats.mediametrics_message.AudioTrackData)
  })
_sym_db.RegisterMessage(AudioTrackData)

CodecData = _reflection.GeneratedProtocolMessageType('CodecData', (_message.Message,), {
  'DESCRIPTOR' : _CODECDATA,
  '__module__' : 'frameworks.proto_logging.stats.message.mediametrics_message_pb2'
  # @@protoc_insertion_point(class_scope:android.stats.mediametrics_message.CodecData)
  })
_sym_db.RegisterMessage(CodecData)

ExtractorData = _reflection.GeneratedProtocolMessageType('ExtractorData', (_message.Message,), {
  'DESCRIPTOR' : _EXTRACTORDATA,
  '__module__' : 'frameworks.proto_logging.stats.message.mediametrics_message_pb2'
  # @@protoc_insertion_point(class_scope:android.stats.mediametrics_message.ExtractorData)
  })
_sym_db.RegisterMessage(ExtractorData)

NuPlayerData = _reflection.GeneratedProtocolMessageType('NuPlayerData', (_message.Message,), {
  'DESCRIPTOR' : _NUPLAYERDATA,
  '__module__' : 'frameworks.proto_logging.stats.message.mediametrics_message_pb2'
  # @@protoc_insertion_point(class_scope:android.stats.mediametrics_message.NuPlayerData)
  })
_sym_db.RegisterMessage(NuPlayerData)

RecorderData = _reflection.GeneratedProtocolMessageType('RecorderData', (_message.Message,), {
  'DESCRIPTOR' : _RECORDERDATA,
  '__module__' : 'frameworks.proto_logging.stats.message.mediametrics_message_pb2'
  # @@protoc_insertion_point(class_scope:android.stats.mediametrics_message.RecorderData)
  })
_sym_db.RegisterMessage(RecorderData)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _AUDIOPOLICYDATA._serialized_start=106
  _AUDIOPOLICYDATA._serialized_end=331
  _AUDIORECORDDATA._serialized_start=334
  _AUDIORECORDDATA._serialized_end=649
  _AUDIOTHREADDATA._serialized_start=652
  _AUDIOTHREADDATA._serialized_end=1319
  _AUDIOTRACKDATA._serialized_start=1322
  _AUDIOTRACKDATA._serialized_end=1570
  _CODECDATA._serialized_start=1573
  _CODECDATA._serialized_end=2801
  _EXTRACTORDATA._serialized_start=2804
  _EXTRACTORDATA._serialized_end=3058
  _EXTRACTORDATA_ENTRYPOINT._serialized_start=2981
  _EXTRACTORDATA_ENTRYPOINT._serialized_end=3058
  _NUPLAYERDATA._serialized_start=3061
  _NUPLAYERDATA._serialized_end=3504
  _RECORDERDATA._serialized_start=3507
  _RECORDERDATA._serialized_end=4012
# @@protoc_insertion_point(module_scope)
